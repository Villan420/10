ApiDataFetcher.js

import React, { Component } from 'react';

class ApiDataFetcher extends Component {

constructor(props) {

super(props);

this.state = {

data: [],

filteredData: [],

loading: true,

error: null,

searchQuery: '',

};

}

componentDidMount() {

this.fetchData();

}

fetchData = () => {

this.setState({ loading: true });

fetch('https://jsonplaceholder.typicode.com/posts')

.then((response) => response.json())

.then((data) => {

this.setState({ data, filteredData: data, loading: false });

})

.catch((error) => {

this.setState({ error: 'Error fetching data', loading: false });

});

};

componentDidUpdate(prevProps, prevState) {

if (prevState.searchQuery !== this.state.searchQuery) {

this.filterData();

}

}

filterData = () => {

const { data, searchQuery } = this.state;
const filteredData = data.filter((item) =>

item.title.toLowerCase().includes(searchQuery.toLowerCase())

);

this.setState({ filteredData });

};

handleSearchChange = (event) => {

this.setState({ searchQuery: event.target.value });

};

handleRefresh = () => {

this.fetchData();

};

render() {

const { filteredData, loading, error, searchQuery } = this.state;

return (

<div className="api-data-fetcher">

<h1>API Data Fetcher</h1>

{loading && <p>Loading...</p>}

{error && <p>{error}</p>}

<input

type="text"

placeholder="Search by title"

value={searchQuery}

onChange={this.handleSearchChange}

/>

<button onClick={this.handleRefresh}>Refresh Data</button>

{filteredData.length > 0 && (

<table>

<thead>

<tr>

<th>ID</th>

<th>Title</th>

<th>Body</th>

</tr>

</thead>

<tbody>

{filteredData.map((item) => (

<tr key={item.id}>

<td>{item.id}</td>

<td>{item.title}</td>

<td>{item.body}</td>

</tr>

))}

</tbody>

</table>

)}

{filteredData.length === 0 && !loading && !error && (
<p>No results found.</p>

)}

</div>

);

}

}

export default ApiDataFetcher
